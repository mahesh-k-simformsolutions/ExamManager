@page "/myexams"

<PageTitle>My exams</PageTitle>

@using ExamManagementSystem.Data
@using ExamManagementSystem.Helpers
@using ExamManagementSystem.Pages.Component
@inject ExamManagementSystem.Service.ExamService ExamService
@inject NavigationManager UriHelper
@inject DataStore DataStore

@attribute [Authorize(Roles = "Student")]
<RadzenText TextStyle="TextStyle.DisplayH4" Text="Exams" />
<RadzenDataGrid IsLoading="@(exams == null)" @ref="examsGrid" AllowColumnResize="true" AllowColumnReorder="true" FilterPopupRenderMode="PopupRenderMode.OnDemand"
                AllowPaging="true" PageSize="8" AllowSorting="true" Data="@exams" TItem="Exam">
    <Columns>
        <RadzenDataGridColumn TItem="Exam" Title="Exam name (Code)" Width="27%">
            <Template Context="data">
                <RadzenText><RadzenLink Path="@("exam/"+data.Id)" Text="@(data.ExamName + " (" + data.ExamCode + ")")" /></RadzenText>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Exam" Title="Status" Width="12%">
            <Template Context="data">
                <ExamStatus Exam="@data" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Exam" Title="Date" Width="13%">
            <Template Context="data">
                <ExamDate Exam="@data" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Exam" Title="Time" Width="18%">
            <Template Context="data">
                <RadzenText Text="@(data.StartTime.ToString("h:mm tt") +" ("+ (@data.Duration +" Mins)"))" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Exam" Title="Marks" Width="7%">
            <Template Context="data">
                <RadzenText Text="@data.Questions.Sum(x => x.Marks).ToString()" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Exam" Title="Examiner" Width="15%">
            <Template Context="data">
                <RadzenText Text="@data.Teacher!.Name" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    RadzenDataGrid<Exam>? examsGrid;

    private List<Exam> exams;
    protected override async Task OnInitializedAsync()
    {
        await Refresh();
        DataStore.DataChanged += Refresh;
    }
    async Task Refresh()
    {
        exams = await ExamService.MyExams();
        await InvokeAsync(() =>
                      {
                          StateHasChanged();
                      });
        //  examsGrid?.Reload();
    }
    public void Dispose()
    {
        DataStore.DataChanged -= Refresh;
    }
}
